package com.scb.axcessspringb.service;

import com.scb.axcessspringb.model.Approver;
import com.scb.axcessspringb.model.Batch;
import com.scb.axcessspringb.repository.ApproverRepository;
import com.scb.axcessspringb.repository.BatchRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.List;

@Service
public class ApproverService {

    @Autowired private ApproverRepository approverRepository;
    @Autowired private BatchRepository batchRepository;

    public List<Approver> getApproversForBatch(String batchId) {
        return approverRepository.findByBatchId(batchId);
    }

    public Approver approveBatch(Long approverId) {
        Approver approver = approverRepository.findById(approverId).orElse(null);
        if (approver != null) {
            approver.setApproved(true);
            approver.setRejected(false);

            Batch batch = approver.getBatch();

            // check if all approvers are approved
            boolean allApproved = true;
            for (Approver a : approverRepository.findByBatchId(batch.getId())) {
                if (!a.isApproved()) {
                    allApproved = false;
                    break;
                }
            }

            if (allApproved) {
                batch.setStatus("approved");
                batchRepository.save(batch);
            }

            approverRepository.save(approver);
        }
        return approver;
    }

    public Approver rejectBatch(Long approverId) {
        Approver approver = approverRepository.findById(approverId).orElse(null);
        if (approver != null) {
            approver.setRejected(true);
            approver.setApproved(false);

            Batch batch = approver.getBatch();
            batch.setStatus("rejected"); // one reject is enough
            batchRepository.save(batch);

            approverRepository.save(approver);
        }
        return approver;
    }
}
